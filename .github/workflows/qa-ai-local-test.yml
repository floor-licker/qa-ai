name: QA AI - Tool Validation Test

on:
  push:
    branches: [ main, develop ]
  workflow_dispatch:  # Allow manual triggers
  pull_request:
    branches: [ main ]

env:
  PYTHON_VERSION: '3.9'

jobs:
  validate-qalia-tool:
    runs-on: ubuntu-latest
    
    steps:
    # 1. Basic Setup
    - name: Checkout QA AI Source Code
      uses: actions/checkout@v4
        
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    # 2. Install QA AI Dependencies
    - name: Install QA AI Dependencies
      run: |
        pip install --no-cache-dir -r requirements.txt
        playwright install chromium

    # 3. Validate QA AI Tool on External Site
    - name: Validate QA AI Tool (External Site Test)
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      run: |
        echo "üîß Validating QA AI tool functionality..."
        echo "Target: https://example.com (external validation site)"
        echo "Purpose: Ensure QA AI tool works correctly after code changes"
        echo ""
        
        # Test QA AI tool on a simple external site
        python main.py https://example.com \
          --headless \
          --max-depth 2 \
          --timeout 120 \
          --output-dir ./validation_results

    # 4. Verify Tool Output
    - name: Verify Tool Functionality
      run: |
        echo "üîç Verifying QA AI tool generated expected outputs..."
        
        if [ -d "validation_results" ]; then
          echo "‚úÖ Output directory created"
          
          # Check if test files were generated
          TEST_COUNT=$(find validation_results -name "*.spec.ts" -o -name "*.cy.js" -o -name "*.test.js" | wc -l)
          echo "üìù Generated $TEST_COUNT test files"
          
          if [ $TEST_COUNT -gt 0 ]; then
            echo "‚úÖ QA AI tool validation PASSED"
          else
            echo "‚ö†Ô∏è QA AI tool validation completed but no test files generated"
          fi
          
          # Show summary if available
          if [ -f "validation_results/generation_summary.json" ]; then
            echo "üìä Tool validation summary:"
            cat validation_results/generation_summary.json | head -10
          fi
        else
          echo "‚ùå QA AI tool validation FAILED - no output generated"
          exit 1
        fi

    # 5. Upload Validation Results (for debugging)
    - name: Upload Validation Results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: qalia-tool-validation
        path: validation_results/ 